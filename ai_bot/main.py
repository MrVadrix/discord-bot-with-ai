import discord, random, os, requests
from discord.ext import commands
from model import get_class

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='$', intents=intents)

@bot.event
async def on_ready():
    print(f'We have logged in as {bot.user}')

# fun tricks #
@bot.command()
async def command_list(ctx):
    await ctx.send(f"–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥:")
    await ctx.send("**$random_emoji**  ->  —Ä–∞–Ω–¥–æ–º–Ω—ã–π –µ–º–æ–¥–∑–∏")
    await ctx.send("**$coin_toss**  ->  –∫–∏–¥–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É –∏ –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞ –∫–∞–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–µ —É–ø–∞–ª–æ")
    await ctx.send("**$hello**  ->  –≥–æ–≤–æ—Ä–∏—Ç –ø—Ä–∏–≤–µ—Ç —Ç–µ–±–µ :)")
    await ctx.send("**$heh**  ->  –Ω–∞–ø–∏—à–∏ heh –∏ —á–∏—Å–ª–æ, –æ–Ω —Å—Ç–æ–ª—å–∫–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç heh")
    await ctx.send("**$repeat**  ->  –≤–ø–∏—à–∏ —Å–ª–æ–≤–æ –ø–æ—Å–ª–µ –∫–æ–º–Ω–∞–¥—ã –∏ –µ—â—ë —á–∏—Å–ª–æ —Å–∫–æ–ª—å–∫–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å")
    await ctx.send("**$meme**  ->  —Å–∫–∏–¥—ã–≤–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π –º–µ–º")
    await ctx.send("**$dog**  ->  —Ä–∞–Ω–¥–æ–º–Ω–∞—è —Å–æ–±–∞–∫–∞")
    await ctx.send("**$duck**  ->  —Ä–∞–Ω–¥–æ–º–Ω–∞—è —É—Ç–∫–∞")
    await ctx.send("**$animal**  ->  —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ")
    await ctx.send("**$eko_list**  ->  —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å —Ç–µ–º–æ–π '–µ–∫–æ–ª–æ–≥–∏—è' ")

@bot.command()
async def random_emoji(ctx):
    emoji_list = ["üòÄ","üòÅ","üòÇ","ü§£","üòé","ü•±","ü•≥","ü§ì"]
    emoji_chosen = random.choice(emoji_list)
    await ctx.send(f"{emoji_chosen}")

@bot.command()
async def coin_toss(ctx):
    coin_side = random.randint(1,2)
    if coin_side == 1:
        await ctx.send(f"–ú–æ–Ω–µ—Ç–∫–∞ —É–ø–∞–ª–∞ –Ω–∞ –æ—Ä–ª–∞!")
    elif coin_side == 2:
        await ctx.send(f"–ú–æ–Ω–µ—Ç–∫–∞ —É–ø–∞–ª–∞ –Ω–∞ —Ä–µ–∂–∫—É!")

@bot.command()
async def hello(ctx):
    await ctx.send(f'–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç {bot.user}!')

@bot.command()
async def heh(ctx, count_heh = 5):
    await ctx.send("he" * count_heh)

@bot.command()
async def repeat(ctx, times: int, content='repeating...'):
    for i in range(times):
        await ctx.send(content)

    '''IMAGE/FILE COMMANDS'''
@bot.command()
async def meme(ctx):
    img_name = random.choice(os.listdir('images'))
    with open(f'images/{img_name}', 'rb') as f:
        picture = discord.File(f)
    await ctx.send(file=picture)

    '''API'''
def get_dog_image_url():
    url = 'https://random.dog/woof.json'
    res = requests.get(url)
    data = res.json()
    return data['url']

def get_duck_image_url():
    url = 'https://random-d.uk/api/random'
    res = requests.get(url)
    data = res.json()
    return data['url']

@bot.command()
async def dog(ctx):
    image_url = get_dog_image_url()
    await ctx.send(image_url)

@bot.command()
async def duck(ctx):
    image_url = get_duck_image_url()
    await ctx.send(image_url)

@bot.command()
async def animal(ctx):
    animal_choice = random.randint(1,2)
    if animal_choice == 1:
        image_url = get_dog_image_url()
        await ctx.send(image_url)
    elif animal_choice == 2:
        image_url = get_duck_image_url()
        await ctx.send(image_url)

    '''eko'''
eko_fact1 = "–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ –≤—ã–∑–≤–∞–Ω–æ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é —á–µ–ª–æ–≤–µ–∫–∞, –≤—ã–±—Ä–∞—Å—ã–≤–∞—é—â–µ–π –ø–∞—Ä–Ω–∏–∫–æ–≤—ã–µ –≥–∞–∑—ã, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —É—Å—Ç–æ–π—á–∏–≤–æ–º—É –ø–æ–≤—ã—à–µ–Ω–∏—é —Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞ –ó–µ–º–ª–µ."
eko_fact2 = "–ì–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –≤–∫–ª—é—á–∞—é—Ç –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –º–æ—Ä—è, –±–æ–ª–µ–µ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è, —Ç–∞–∫–∏–µ –∫–∞–∫ –≤–æ–ª–Ω—ã —Ç–µ–ø–ª–∞ –∏ —à—Ç–æ—Ä–º—ã, –∞ —Ç–∞–∫–∂–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è —ç–∫–æ—Å–∏—Å—Ç–µ–º –∏ —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞."
eko_fact3 = "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è —Ç—Ä–µ–±—É–µ—Ç —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –≤—ã–±—Ä–æ—Å–æ–≤ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤ –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º —É—Å—Ç–æ–π—á–∏–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏."

ice_glacier_fact1 = "–¢–∞—è–Ω–∏–µ –ª–µ–¥–Ω–∏–∫–æ–≤ –≤–ª–∏—è–µ—Ç –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –º–∏—Ä–æ–≤—ã—Ö –æ–∫–µ–∞–Ω–æ–≤, —É–≤–µ–ª–∏—á–∏–≤–∞—è –µ–≥–æ –∏ —É–≥—Ä–æ–∂–∞—è –ø—Ä–∏–±—Ä–µ–∂–Ω—ã–º –æ–±–ª–∞—Å—Ç—è–º –∏ —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞–º."
ice_glacier_fact2 = "–≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å —É—Å–∫–æ—Ä—è–µ—Ç—Å—è –∏–∑-–∑–∞ –≤—ã–±—Ä–æ—Å–æ–≤ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ —É–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑, –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∏–∑-–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏."
ice_glacier_fact3 = "–¢–∞—è–Ω–∏–µ –ª–µ–¥–Ω–∏–∫–æ–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑-–∑–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é —Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞ –ó–µ–º–ª–µ."

@bot.command()
async def eko_list(ctx):
    await ctx.send("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã:")
    await ctx.send("**$global_warming_facts**   ->   —Ñ–∞–∫—Ç—ã –æ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–∏")
    await ctx.send("**$ice_glaciers_melting**    ->   –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—è–Ω–∏–∏ –ª–µ–¥–Ω–∏–∫–æ–≤")
    await ctx.send("**$global_warming_solving**  ->  —Å–ø–æ—Å–æ–±—ã —Ä–µ—à–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ")

@bot.command()
async def global_warming_facts(ctx):
    global_warming_fact_chosen = random.randint(1,3)
    if global_warming_fact_chosen == 1:
        await ctx.send(f"–í–æ—Ç –≤–∞–º —Ñ–∞–∫—Ç –æ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–∏:\n{eko_fact1}")
    if global_warming_fact_chosen == 2:
        await ctx.send(f"–í–æ—Ç –≤–∞–º —Ñ–∞–∫—Ç –æ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–∏:\n{eko_fact2}")
    if global_warming_fact_chosen == 3:
        await ctx.send(f"–í–æ—Ç –≤–∞–º —Ñ–∞–∫—Ç –æ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–∏:\n{eko_fact3}")

@bot.command()
async def ice_glaciers_melting(ctx):
    ice_glaciers_fact_chosen = random.randint(1,3)
    if ice_glaciers_fact_chosen == 1:
        await ctx.send(f"–í–æ—Ç –≤–∞–º —Ñ–∞–∫—Ç –æ –ª–µ–¥–Ω–∏–∫–∞—Ö:\n{ice_glacier_fact1}")
    if ice_glaciers_fact_chosen == 2:
        await ctx.send(f"–í–æ—Ç –≤–∞–º —Ñ–∞–∫—Ç –æ –ª–µ–¥–Ω–∏–∫–∞—Ö:\n{ice_glacier_fact2}")
    if ice_glaciers_fact_chosen == 3:
        await ctx.send(f"–í–æ—Ç –≤–∞–º —Ñ–∞–∫—Ç –æ –ª–µ–¥–Ω–∏–∫–∞—Ö:\n{ice_glacier_fact3}")

@bot.command()
async def global_warming_solving(ctx):
    solving_num = random.randint(1,3)
    if solving_num == 1:
        await ctx.send(f"–í–æ—Ç –æ–¥–∏–Ω —Å–ø–æ—Å–æ–±:\n–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º—É—é —ç–Ω–µ—Ä–≥–∏—é:\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–ª–Ω–µ—á–Ω–æ–π, –≤–µ—Ç—Ä–æ–≤–æ–π –∏ –≥–∏–¥—Ä–æ—ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –≤—ã–±—Ä–æ—Å–æ–≤ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤.")
    if solving_num == 2:
        await ctx.send(f"–í–æ—Ç –æ–¥–∏–Ω —Å–ø–æ—Å–æ–±:\n–ü–æ–≤—ã—à–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:\n–£–ª—É—á—à–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –∑–¥–∞–Ω–∏—è—Ö, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ –∏ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏.")
    if solving_num == 3:
        await ctx.send(f"–í–æ—Ç –æ–¥–∏–Ω —Å–ø–æ—Å–æ–±:\n–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–µ—Å–æ–≤:\n–ó–∞—â–∏—Ç–∞ –ª–µ—Å–æ–≤ –æ—Ç –≤—ã—Ä—É–±–∫–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ–≥—Ä–∞–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ª–µ—Å–Ω—ã—Ö –∑–æ–Ω –¥–ª—è –ø–æ–≥–ª–æ—â–µ–Ω–∏—è —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞.")

#  AI  #

@bot.command()
async def new_command(ctx):
    if ctx.message.attachments:
        for attachment in ctx.message.attachments:
            file_name = attachment.filename
            file_url = attachment.url
            
            await attachment.save(f"images/{file_name}")
            await ctx.send(f"–°–æ—Ö—Ä–∞–Ω–∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ images/{file_name}")
            await ctx.send(get_class(model_path="keras_model.h5", labels_path="labels.txt", image_path=f"img/{file_name}"))
    else:
        await ctx.send("–í—ã –∑–∞–±—ã–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!")


#  ---  #

#TOKEN
bot.run(TOKEN)
